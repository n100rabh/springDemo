<?xml version="1.0" encoding="UTF-8" ?>
<!-- <!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd"> -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"
	xmlns:context="http://www.springframework.org/schema/context"
	default-init-method="init" default-destroy-method="mydestroy"> <!-- to have init and destroy for all beans -->

	<bean id="triangle" class="com.example.spring.Triangle">
		<!-- <constructor-arg index="0" value="Equilateral" />
		<constructor-arg index="1" value="20"/> -->
		 <constructor-arg value="Equilateral" /> 
		 <constructor-arg  type="java.lang.Integer" value= "20" /> 
		<!-- <property name="type" value="isoceles" /> -->
	</bean>

	<bean id="triangle2" class="com.example.spring.Triangle2" name="tr-name"
		init-method="init" destroy-method="mydestroy">
		<property name="a" ref="pointA" />	<!-- ref can point to name, id, alias -->

		<property name="b">
			<!-- InnerBean doesn't require id since no one is going to access this 
				except triangle2 -->
			<bean class="com.example.spring.Point">
				<property name="x" value="-20" />
				<property name="y" value="0" />
			</bean>
		</property>

		<property name="c" ref="pointC">
			<!-- <idref local="pointC" /> -->
		</property>
	</bean>

	<bean id="pointA" class="com.example.spring.Point">
		<property name="x" value="${pointA.x}" />
		<property name="y" value="${pointA.y}" />
	</bean>

	<bean id="pointB" class="com.example.spring.Point">
		<qualifier value="center" />
		<property name="x" value="${pointB.x}" />
		<property name="y" value="0" />
	</bean>

	<bean id="pointC" class="com.example.spring.Point">
		<property name="x" value="0" />
		<property name="y" value="20" />
	</bean>

	<alias name="triangle2" alias="triangle-alias" />

	<bean id="triangle3" class="com.example.spring.Triangle3"> <!-- abstract="true"> -->
		<property name="points">
			<list>
				<ref bean="pointA" />
				<ref bean="pointC" />
			</list>
		</property>
	</bean>

	<bean id="triangle4" class="com.example.spring.Triangle4" autowire="byName"
		scope="prototype" />

	<!-- <bean name="triangle4" class="com.example.spring.Triangle4" autowire="constructor" 
		/> -->

	<bean id="shape" class="com.example.spring.TriangleContainer"
		autowire="byType" />

	<bean id="triangle5" class="com.example.spring.Triangle5" autowire="byName" />

	<bean id="parentTriangle" class="com.example.spring.Triangle2">
		<property name="a" ref="pointA" />
	</bean>

	<bean id="triangle6" class="com.example.spring.Triangle2" parent="parentTriangle">
		<property name="b" ref="pointB" />
		<property name="c" ref="pointC" />
	</bean>

	<bean id="triangle7" class="com.example.spring.Triangle2" parent="parentTriangle">
		<property name="b" ref="pointB" />
	</bean>

	<bean id="triangle8" class="com.example.spring.Triangle3" parent="triangle3">
		<property name="points">
			<list merge="true">
				<ref bean="pointB" />
			</list>
		</property>
	</bean>

	<!-- <bean class="com.example.spring.DisplayBeanNamePostProcessor" /> -->
	<bean class="com.example.spring.MyBeanFactoryPostProcessor" />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="pointConfig.properties"></property>
	</bean>

	<bean id="circle" class="com.example.spring.Circle">
		<!-- <property name="center" ref="pointA" /> -->
	</bean>

	<!-- <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" 
		/> -->
	<!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" 
		/> <bean class="org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver" 
		/> -->

	<context:annotation-config /> <!-- shortcut for defining all Annotation related Post Processor beans together, 
		so now we can comment the above PostProcessor beans -->

	<!-- <bean id="center" class="com.example.spring.Point"> <property name="x" 
		value="${pointA.x}" /> <property name="y" value="${pointA.y}" /> </bean> -->

	<!-- <bean id="circle2" class="com.example.spring.Circle2"/> -->

	<context:component-scan base-package="com.example.spring" /> <!-- to make sure Spring scans all classes inside package to check for all 
		classes marked as bean -->

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
	</bean>

</beans>